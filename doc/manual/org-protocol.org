#+TITLE: AutOrg -= org-protocol
#+DATE: <2010-06-14 ma>
#+AUTHOR: Yaakov
#+SETUPFILE: .autorg-setup.org

DOCS { [[file:autonomy-is-organization.org][About]] | [[file:API.org][API]] | Book | [[file:org-gtd.org][GTD]] | [[file:index.org][Index]] }

* Introduction
  :PROPERTIES:
  :CATEGORY: AutOrg
  :END:
  Org-Protocol is very open ended, and sometimes it can be difficult
  to decide where to start. This document will explain how to
  integrate org-protocol into a variety of commonly used programs.

* About
  Org-Protocol is in principle a URI specification designed to pass
  messages to org-mode running in emacs. It begins with a common
  prefix followed by a sub-module prefix. The submodule prefix is
  handled dynamically by a function dispatch in emacs, which can be
  reconfigured dynamically. Once org-protocol is setup, there is no
  need to restart emacs in order to test changes.

* Emacs daemon
  Like an http daemon, we need a daemon to handle incoming calls to
  org-protocol. The most simple deployment is to use emacs daemon,
  and pass the uri as a parameter to emacsclient. For this document,
  we will assume that the user has emacs server already set up and
  working. Perhaps in the future, we will document emacs server in
  the context of org-mode, org-remember and org-protocol.

  The crux of configuring org-protocol is to configure other programs
  to use emacs as a handler for org-protocol:// style urls. The rest
  of this document will explain how this works in various programs.

* Handlers
  Org-protocol allows the use of various handlers. We will use some
  stock and some custom handlers. Each handler is preceded by a one or
  two character identifying string. The following ones are in use

** Remember
   Remember passes a message to the internal org-remember function in
   emacs. It allows you to integrate inbox items from any resource on
   your desktop in a central inbox in your org-mode agenda
   collection. It opens a dialog where you can edit the header passed
   to emacs and then optionally alows you to call org-refile before
   saving it in your agenda.

*** Remember Mail
    We have a special template for mail that begins with the prefix m.

    ("Mail" ?m "* %?\n\n  Source: %U, %c\n  %i"
     "/path/to/default.location.org" "Default header")

** Open Source
   Open source takes, as a parameter, a link to a web page or other
   resource that has been potentially generated from an org-mode
   document. It opens a the local copy on your machine for
   editing. The document can be edited, saved, and commited to a VC
   system with functionality provided by emacs, and/or your local
   operating system.

* Org-links
  Since we are concerned with sending information *to* org-mode, we
  also want to configure org-mode to send information to other
  programs. One common design pattern is the idea of self
  registration. A program may send a message to org-mode linking back
  to itself. For example, mutt may send unique message IDs to be
  stored as links in org-mode that link back to mutt.

  We will cover configuring new kinds of links in org-mode in another
  document.

  The following recommendations are for org-link headers in use for
  the AutOrg project.

** Mail
   Link to mail should be set as mid:<message-id>

* API
  While you can pretty much send anything you want via org-protocol,
  it's advised to clearly define what information you want to send and
  how you want to send it. This way, more tools can be written around
  org-protocol that will be interchangeable and compatible with each
  other.

  The following recommendations are in use for the AutOrg project.

** Mail
   To send a link to an email message, you can send three
   parameters. The first is a link back to the message, the second is
   the title of the link, the third is optional information, as a
   string, to give the user more information about the link. For
   example, the last parameter could contain the subject and the
   person from whom the email is from. It is formatted so:

   org-protocol:/remember:/m/mid:<message-id>/<link-title>/<optional-text>

* Notes
  Some extra notes to be aware of when developing hooks to
  org-protocol.

** URI Escape
   Most programming languages provide a uri_escape function. This must
   be used when passing information to org-protocol.
